# -*- coding: utf-8 -*-
"""movie.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jIdwH3XaFKtwofm-c_7NZqjHExJ-Go6d
"""

import numpy as np
import pandas as pd
import difflib
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

import  pandas as pd
m_data = pd.read_csv('/content/movies.csv')



m_data.head()

m_data.info()

m_data.tail()

m_data.shape

selected_features=['genres','keywords','tagline','cast','director','overview']

print(selected_features)

for feature in selected_features:
  m_data[feature]=m_data[feature].fillna('')

c_features=m_data['genres']+''+m_data['keywords']+''+m_data['tagline']+''+m_data['cast']+''+m_data['director']+''+m_data['overview']

print(c_features)

vectorizer=TfidfVectorizer()

feature_vectors=vectorizer.fit_transform(c_features)
print(feature_vectors)

similarity=cosine_similarity(feature_vectors)
print(similarity)

m_name=input("enter you are movie name")

list_of_titles=m_data['title'].tolist()
print(list_of_titles)

print(type(m_name))
print(type(list_of_titles))
if isinstance(m_name, float):
    m_name = str(m_name)

if any(isinstance(title, float) for title in list_of_titles):
    list_of_titles = [str(title) for title in list_of_titles]
m_name = str(m_name) if not pd.isna(m_name) else ''
list_of_titles = [str(title) if not pd.isna(title) else '' for title in list_of_titles]

find_close_match=difflib.get_close_matches(m_name, list_of_titles)
print(find_close_match)

close_match=find_close_match[0]
print(close_match)

index_movie=m_data[m_data.title == close_match]['index'].values[0]
print(index_movie)

similarity_score=list(enumerate(similarity[int(index_movie)]))
print(similarity_score)

similar_movies=sorted(similarity_score,key=lambda x:x[1],reverse=True)
print(similar_movies)

print('Movie suggested for you:\n')
i=1
for movie in similar_movies:
  index = movie[0]
  tital_from_index=m_data[m_data.index==index]['title'].values[0]
  if(i<40):
    print(i,',',tital_from_index)
    i+=1

movie_name = input('Enter your movie: ')
list_of_titles = m_data['title'].astype(str).tolist()
find_close_match = difflib.get_close_matches(movie_name, list_of_titles)

if find_close_match:
    close_match = find_close_match[0]
    print(f"Closest match: {close_match}")
else:
    print("No close match found.")

movie_name=input('enter your movie:')

close_match=find_close_match[0]

index_movie=m_data[m_data.title == close_match]['index'].values[0]

similarity_score=list(enumerate(similarity[int(index_movie)]))

similar_movies=sorted(similarity_score,key=lambda x:x[1],reverse=True)

print('Movie suggested for you:\n')
i=1
for movie in similar_movies:
  index = movie[0]
  tital_from_index=m_data[m_data.index==index]['title'].values[0]
  if(i<30):
    print(i,',',tital_from_index)
    i+=1